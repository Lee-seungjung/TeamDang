<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dangReport">

	<!-- 신고번호 시퀀스 -->
	<select id="sequence" resultType="int">
		select dang_report_seq.nextval from dual
	</select>
	
	<!-- 신고 접수등록 -->
	<insert id="insert" parameterType="DangReportDto">
		insert into dang_report(report_no, dang_no, report_user_no, user_no, member_nick,
		report_content, report_date, report_state, report_alert) values(
		#{reportNo}, #{dangNo}, #{reportUserNo}, #{userNo}, #{memberNick}, #{reportContent}, 
		sysdate, '접수', 1)
	</insert>
	
	<!-- 신고 파일등록 -->
	<insert id="imgInsert" parameterType="ReportImgDto">
		insert into report_img(attachment_no, report_no) values(#{attachmentNo}, #{reportNo})
	</insert>
	
	<!-- 신고 정보 확인 -->
	<select id="checkReport" parameterType="Map" resultType="DangReportDto">
		select*from dang_report where dang_no=#{dangNo} and user_no=#{userNo} and report_state='완료' and report_alert=1
	</select>
	
	<!-- 신고 누적 횟수 확인 -->
	<select id="reportAppCnt" parameterType="Map" resultType="int">
		select count(*) from dang_report where dang_no=#{dangNo} and user_no=#{userNo} and report_state='완료'
	</select>
	
	<!-- 신고창확인 컬럼 변경 -->
	<update id="alertUpdate" parameterType="int">
		update dang_report set report_alert=0 where report_no=#{reportNo}
	</update>
	
	<!-- 신고상태 컬럼 변경 -->
	<update id="stateUpdate" parameterType="DangReportDto">
		update dang_report set report_state=#{reportState} where report_no=#{reportNo}
	</update>
	
	<!-- 신고상태 컬럼 변경(처리못한 접수>반려) -->
	<update id="stateRejUpdate" parameterType="DangReportDto">
		update dang_report set report_state='반려' where report_state='접수' and user_no=#{userNo} and dang_no=#{dangNo}
	</update>
	
	<!-- 신고+댕모임명 검색조회 -->
	<select id="selectList" resultType="ReportListVO" parameterType="reportListRequestDto">
		select * from (
		    select tmp.*, rownum rn from (	
				select*from (select r.*, d.dang_name from dang_report r inner join dang d on r.dang_no=d.dang_no
				order by r.report_date desc) 
				<where>
					report_state=#{reportState}
					<if test="type != null and keyword != null">
						and instr(${type},#{keyword})>0
					</if>
				</where>
		    )tmp
		) where rn between #{rownumStart} and #{rownumEnd}
	</select>
	
	<!-- 조건에 따른 신고 검색조회 갯수 -->
	<select id = "countList" resultType = "int" parameterType = "reportListRequestDto">
		select count(report_no) from (select r.*, d.dang_name from dang_report r inner join dang d on r.dang_no=d.dang_no) 
		<where>
			report_state=#{reportState}
			<if test="type != null and keyword != null">
				and instr(${type},#{keyword})>0
			</if>
		</where>
	</select>
	
	<!-- 신고 단일조회 -->
	<!-- <select id="selectOne" resultType="ReportOneListVO" parameterType="int">
		select ddudm.*, dr.report_no, dr.report_content, dr.report_date, dr.report_state, dr.report_alert 
		from dang_report dr 
		inner join (select d.dang_no, d.dang_name, dudm.user_no, dudm.member_no, dudm.member_nick, dudm.member_owner  
					from dang d inner join (
											select du.user_no, dm.member_no, dm.member_nick, dm.member_owner, dm.dang_no from dang_user du 
											inner join dang_member dm on du.user_no = dm.user_no
											) dudm on d.dang_no = dudm.dang_no
					) ddudm 
		on dr.user_no = ddudm.user_no
		where dr.report_no = #{reportNo}
	</select> -->
	<select id="selectOne" resultType="ReportOneListVO" parameterType="Map">
		select d.dang_name, r.* from dang d inner join dang_report r on d.dang_no=r.dang_no
		where r.report_no=#{reportNo}
	</select>
	
	<!-- 신고현황 카운트 조회 -->
	<select id="cntList" resultType="ReportCntVO">
		select rec.*, rej.*, app.* from (select count(*) received from dang_report where report_state='접수') rec 
		inner join (select count(*) rejected from dang_report where report_state='반려') rej on 1=1 
		inner join (select count(*) approved from dang_report where report_state='완료') app on 1=1
	</select>
	
	<!-- 신고 이미지 조회 -->
	<select id="fingImg" resultType="ReportImgDto" parameterType="int">
		select*from report_img where report_no=#{reportNo}
	</select>
	
	<!-- 특정 댕모임에서 특정 회원이 받은 신고 중 승인된 신고 갯수 -->
	<select id = "countReportApproved" parameterType = "map" resultType = "int">
		select count(report_no) from dang_report where report_state = '완료' and dang_no = #{dangNo} and user_no = #{userNo}
	</select>
	
</mapper>
  
  
  