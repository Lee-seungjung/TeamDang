<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dangBoard">

	<!-- 시퀀스 발급-->
	<select id="sequence" resultType="int">
		select dang_board_seq.nextval from dual
	</select>

	<!-- 글 등록 -->
	<insert id="write" parameterType="DangBoardDto">
		insert into dang_board(board_no, member_no, dang_no, member_nick, board_content, board_like, 
		board_writedate, board_updatedate, board_state, board_category) 
		values(#{boardNo}, #{memberNo}, #{dangNo},#{memberNick}, #{boardContent}, 0,
		sysdate, sysdate, 'N', #{boardCategory})
	</insert>
	
	<!-- 게시글 좋아요 등록 -->
	<insert id="likeInsert" parameterType="DangBoardLikeDto">
		insert into dang_board_like(board_no, member_no) values(#{boardNo},#{memberNo})
	</insert>
	
	
	<!-- 댕모임 게시글 전체조회(동기방식 5개만)-->
	<!-- 게시글, 작성자 방장여부, 프로필, 게시글첨부파일(수), 댓글수 -->
	<select id="selectAll" resultType="BoardHistoryVO" parameterType="int">
		select*from(
		    select TMP.*, rownum rn from(
		        select total1.*, total2.board_attachment_cnt, total3.replycnt from (
				select b.*, m.member_owner, uimg.attachment_no from dang_board b
					left outer join dang_member m on b.member_no=m.member_no
					left outer join user_img uimg on m.user_no=uimg.user_no
					) total1 
					left outer join (
					select bimg.board_no, count(*) board_attachment_cnt from board_img bimg group by bimg.board_no
					) total2 on total1.board_no=total2.board_no
					left outer join (
					select reply.board_no, count(*) replycnt from dang_reply reply group by reply.board_no
					) total3 on total1.board_no=total3.board_no
				where total1.dang_no=#{dangNo} order by total1.board_no desc
		    )TMP
		) where rn between 1 and 12
	</select>
	
	<!-- 내가 쓴 게시글 조회-->
	<select id="writeCount" resultType="int" parameterType="int">
		select count(*) from dang_board where member_no=#{memberNo}
	</select>
	
	<!-- 좋아요 테이블 조회 -->
	<select id="findLike" resultType="DangBoardLikeDto" parameterType="int">
		select * from dang_board_like where member_no=#{memberNo}
	</select>
	
	<!-- 게시글 첨부파일 등록 -->
	<insert id="imgInsert" parameterType="BoardImgDto">
		insert into board_img(board_no, attachment_no) values(#{boardNo},#{attachmentNo})
	</insert>
	
	<!-- 게시글 첨부파일 조회 -->
	<select id="findImg" resultType="BoardImgDto" parameterType="int">
		select * from board_img where board_no=#{boardNo}
	</select>
	
	<update id="editBoard" parameterType="BoardEditVO">
		update dang_board set board_category=#{boardCategory}, board_content=#{boardContent} 
		where board_no=#{boardNo}
	</update>
	
	<!-- 게시글 좋아요 수 증가 -->
	<update id="plusLike" parameterType="int">
		update dang_board set board_like=board_like+1 where board_no=#{boardNo}
	</update>
	
	<!-- 게시글 좋아요 수 감소 -->
	<update id="minusLike" parameterType="int">
		update dang_board set board_like=board_like-1 where board_no=#{boardNo}
	</update>
	
	<!-- 게시글 삭제 -->
	<delete id="delete" parameterType="int">
		delete dang_board where board_no=#{boardNo}
	</delete>
	
	<!-- 좋아요 삭제 -->
	<delete id="deleteLike" parameterType="DangBoardLikeDto">
		delete dang_board_like where board_no=#{boardNo} and member_no=#{memberNo}
	</delete>
  
</mapper>
  
  
  