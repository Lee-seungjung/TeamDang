<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="dang">

	<!-- 댕모임 번호 반환 -->
	<select id = "dangNo" resultType = "int">
		select dang_seq.nextval from dual
	</select>

	<!-- 댕모임 개설 (공개) -->
	<insert id = "createPublic" parameterType = "DangDto">
		insert into dang(dang_no, dang_area, user_no, dang_name, dang_info, dang_headmax) values(#{dangNo}, #{dangArea}, #{userNo}, #{dangName}, #{dangInfo}, #{dangHeadmax})
	</insert>
  
  	<!-- 댕모임 개설 (비공개) -->
  	<insert id = "createPrivate" parameterType = "DangDto">
  		insert into dang(dang_no, dang_area, user_no, dang_name, dang_info, dang_headmax, dang_private, dang_pw) values(#{dangNo}, #{dangArea}, #{userNo}, #{dangName}, #{dangInfo}, #{dangHeadmax}, 'Y', #{dangPw})
  	</insert>
  	
  	<!-- 댕모임 프로필 첨부파일 정보 등록 -->
  	<insert id = "insertDangImg" parameterType = "map">
  	  	insert into dang_img(dang_no, attachment_no) values(#{dangNo}, #{attachmentNo})
  	</insert>
  	
  	<!-- 댕모임 정보 조회 -->
  	<select id = "selectDangEditInfo" parameterType = "int" resultType = "DangEditInfoVO">
  		select d.dang_no, d.dang_name, d.dang_info, d.dang_headmax, d.dang_head, d.dang_private, d.dang_pw, d.dang_area, di.attachment_no
  			from dang d left outer join dang_img di on d.dang_no = di.dang_no where d.dang_no = #{dangNo}
  	</select>
  	
  	<!-- 댕모임 단일조회(첨부파일 + 댕모임) -->
	<select id="selectOneDangInfo" parameterType = "int" resultType = "DangOneInfoVO">
		select d.*, img.attachment_no from dang d 
		left outer join dang_img img on d.dang_no=img.dang_no
		where d.dang_no=#{dangNo}
	</select>
	
	<!-- 댕모임 방장(개설자) userNo 조회 -->
	<select id="findUserNo" parameterType = "int" resultType = "int">
		select user_no from dang where dang_no=#{dangNo}
	</select>
	
  	<!-- 댕모임 정보 수정(공개 전환) -->
  	<update id = "editDangInfoPublic" parameterType = "DangEditInfoVO">
  		update dang set dang_name = #{dangName}, dang_info = #{dangInfo}, dang_headmax = #{dangHeadmax}, dang_private = #{dangPrivate}, dang_pw = null, dang_area = #{dangArea} where dang_no = #{dangNo}
  	</update>
  	
  	<!-- 댕모임 정보 수정(비공개 전환) -->
  	<update id = "editDangInfoPrivate" parameterType = "DangInfoVO">
  		update dang set dang_name = #{dangName}, dang_info = #{dangInfo}, dang_headmax = #{dangHeadmax}, dang_private = #{dangPrivate}, dang_pw = #{dangPw}, dang_area = #{dangArea} where dang_no = #{dangNo}
  	</update>
  	
  	<!-- 댕모임 프로필 첨부파일 번호 조회 -->
  	<select id = "selectDangImg" parameterType = "int" resultType = "int">
  		select attachment_no from dang_img where dang_no = #{dangNo}
  	</select>
  	
  	<!-- 지역구별 댕모임 5개 조회(좋아요 순/회원수 순) -->
  	<select id = "searchDangTop" parameterType = "String" resultType = "DangTopVO">
  		select * from (select tmp.*, rownum rn from(select dang_no, dang_name, dang_area from dang where dang_area = #{dangArea} order by dang_like desc, dang_head desc)tmp) where rn between 1 and 5
  	</select>
  	
  	<!-- 댕모임 번호로 등록된 해시태그 전체 조회 -->
 	<select id = "selectHashtagList" parameterType = "int" resultType = "DangHashtagVO">
 		select hashtag_no, hashtag_content from dang_hashtag where dang_no = #{dangNo}
 	</select>
 	
  	<!-- 댕모임 상세 정보 -->
 	<select id = "selectDangDetail" parameterType = "int" resultMap = "dangDetailDto">
 		select * from dang d left outer join dang_img di on d.dang_no = di.dang_no where d.dang_no = #{dangNo}
 	</select>
 	<resultMap id = "dangDetailDto" type = "DangDetailDto">
 		<association property = "dangInfo">
 			<result column = "dang_no" property = "dangNo"/>
 			<result column = "dang_name" property = "dangName"/>
 			<result column = "dang_info" property = "dangInfo"/>
 			<result column = "dang_headmax" property = "dangHeadmax"/>
 			<result column = "dang_head" property = "dangHead"/>
 			<result column = "dang_area" property = "dangArea"/>
 			<result column = "dang_createtime" property = "dangCreatetime" javaType="java.sql.Date"/>
 			<result column = "dang_like" property = "dangLike"/>
 			<result column = "dang_private" property = "dangPrivate"/>
 			<result column = "dang_pw" property = "dangPw"/>
 			<result column = "attachment_no" property = "attachmentNo"/>
 		</association>
 		<collection column = "dang_no" property = "dangHashtag" javaType = "java.util.List" ofType = "DangHashtagVO" select = "selectHashtagList">
 			<result column = "hashtag_no" property = "hashtagNo"></result>
 			<result column = "hashtag_content" property = "hashtagContent"></result>
 		</collection>
 	</resultMap>
 	
 	<!-- 댕모임 조회 -->
 	<select id = "selectDangList" parameterType = "DangListRequestDto" resultMap = "dangListDto">
 		select * from (
			select tmp.*, rownum rn from (
				select dudldid.attachment_no, dudldid.dang_no, dudldid.dang_name, dudldid.dang_info, dudldid.dang_headmax, dudldid.dang_head, dudldid.dang_createtime, dudldid.dang_like, dudldid.dang_private, dudldid.dang_pw, dudldid.dang_area, 
				<choose>
 				<when test = "userNo != null">
				count(case when dudldid.user_no = #{userNo} then 1 end) as is_like 
				</when>
				<otherwise>
				0 as is_like
				</otherwise>
				</choose>
				from
				(select did.*, dudl.user_no from 
				    (select dl.dang_no, dl.user_no from dang_like dl inner join dang_user du on dl.user_no = du.user_no) dudl
				        right outer join 
				    (select di.attachment_no, d.dang_no, d.dang_name, d.dang_info, d.dang_headmax, d.dang_head, d.dang_createtime, d.dang_like, d.dang_private, d.dang_pw, d.dang_area from dang_img di right outer join dang d on di.dang_no = d.dang_no) did
				on dudl.dang_no = did.dang_no)
				dudldid 
				<where>
		 			<if test = "searchName != null">
		 				and instr(dudldid.dang_name, #{searchName}) > 0
		 			</if>
		 			<if test = "searchName != null and searchArea != null">
			 			and (
			 		</if>		 		
			 		<if test = "searchArea != null">
		 				<foreach collection = "searchArea" item = "searchArea" separator = "or"> 				
			 				instr(dudldid.dang_area, #{searchArea}) > 0
		 				</foreach>
		 			</if>
		 			<if test = "searchName != null and searchArea != null">
			 			)
			 		</if>
		 		</where>
				group by dudldid.attachment_no, dudldid.dang_no, dudldid.dang_name, dudldid.dang_info, dudldid.dang_headmax, dudldid.dang_head, dudldid.dang_createtime, dudldid.dang_like, dudldid.dang_private, dudldid.dang_pw, dudldid.dang_area
	 		<if test = "sort != null">
	 			order by ${sort}
	 		</if>
	 		)tmp
		) where rn between #{rownumStart} and #{rownumEnd}
 	</select>
 	<resultMap id = "dangListDto" type = "DangListResponseDto">
 		<association property = "dangInfo">
 			<result column = "attachment_no" property = "attachmentNo"/>
 			<result column = "dang_no" property = "dangNo"/>
 			<result column = "dang_name" property = "dangName"/>
 			<result column = "dang_info" property = "dangInfo"/>
 			<result column = "dang_headmax" property = "dangHeadmax"/>
 			<result column = "dang_head" property = "dangHead"/>
 			<result column = "dang_area" property = "dangArea"/>
 			<result column = "dang_createtime" property = "dangCreatetime" javaType="java.sql.Date"/>
 			<result column = "dang_like" property = "dangLike"/>
 			<result column = "dang_private" property = "dangPrivate"/>
 			<result column = "dang_pw" property = "dangPw"/>
 			<result column = "is_like" property = "isLike"/>
 		</association>
 		<collection column = "dang_no" property = "dangHashtag" javaType = "java.util.List" ofType = "DangHashtagVO" select = "selectHashtagList">
 			<result column = "hashtag_no" property = "hashtagNo"></result>
 			<result column = "hashtag_content" property = "hashtagContent"></result>
 		</collection>
 	</resultMap>
 
 	<!-- 댕모임 목록 갯수 -->
 	<select id = "countDangTotal" parameterType = "DangListRequestDto" resultType = "int">
 		select count(*) from dang
 		<where>
 			<if test = "searchName != null">
 				and instr(dang_name, #{searchName}) > 0
 			</if>
 			<if test = "searchArea != null">
	 			and (
	 		</if>
	 		<if test = "searchArea != null">
 				<foreach collection = "searchArea" item = "searchArea" separator = "or"> 				
	 				instr(dang_area, #{searchArea}) > 0
 				</foreach>
 			</if>
 			<if test = "searchArea != null">
	 			)
	 		</if>
 		</where>
 	</select>
 	
 	<!-- 댕모임 회원수 갱신 -->
 	<update id = "updateDangHead" parameterType = "map">
 		update dang set dang_head = #{dangHead} where dang_no = #{dangNo}
 	</update>
 	
 	<!-- 댕모임 회원수 갱신 -->
 	<update id = "minusDangHead" parameterType = "int">
 		update dang set dang_head = dang_head-1 where dang_no = #{dangNo}
 	</update>
 	
	<!-- 댕모임 좋아요 갯수 갱신 -->
	<update id = "updateDangLike" parameterType = "map">
		update dang set dang_like = #{dangLike} where dang_no = #{dangNo}
	</update>
	
	<!-- 마이페이지 내가 가입한 댕모임 -->
	<select id = "selectMydang" parameterType = "map" resultType = "DangUserJoinResponseDto">
		select * from (
			select tmp.*, rownum rn from (
				select ddi.*, dm.member_joindate 
				from dang_member dm 
				inner join 
				(select d.dang_no, d.dang_name, d.dang_info, d.dang_area, d.dang_private, di.attachment_no from dang d left outer join dang_img di on d.dang_no = di.dang_no) ddi 
				on dm.dang_no = ddi.dang_no where dm.user_no = #{userNo}
			)tmp
		) where rn between #{rownumStart} and #{rownumEnd}
	</select>
	
	<!-- 마이페이지 내가 가입한 댕모임 총 갯수 -->
	<select id = "countMydang" parameterType = "int" resultType = "int">
		select count(member_no) from dang d inner join dang_member dm on d.dang_no = dm.dang_no where dm.user_no = #{userNo}
	</select>
	
	<!-- 마이페이지 로그인 중인 회원이 개설한 댕모임 목록 -->
	<select id = "selectMydangOwner" parameterType = "int" resultType = "int">
		select dang_no from dang_member where user_no = #{userNo} and member_owner = 'Y'
	</select>
	
	<update id="userNoHeadUpdate" parameterType="DangDto">
		update dang set user_no=#{userNo}, dang_head=dang_head-1 where dang_no=${dangNo}
	</update>
	
	<!-- 관리자 페이지 댕모임 목록 전체/검색 조회 -->
  	<select id = "searchDangListAdmin" parameterType = "DangListAdminRestRequestDto" resultType = "DangListAdminDto">
  		select * from (
			select tmp.*, rownum rn from (
		  		select dang_no, user_no, dang_name, dang_head, dang_headmax, dang_like, dang_private from dang
				<where>
					<if test = "dangArea != null">
						and dang_area = #{dangArea}
					</if>
					<if test = "dangName != null">
						and instr(dang_name, #{dangName}) > 0
					</if>
				</where>
				order by dang_like desc, dang_head desc
	  		)tmp
		) where rn between #{rownumStart} and #{rownumEnd}
  	</select>
  	
  	<!-- 관리자 페이지 조건에 따른 댕모임 갯수 -->
  	<select id = "countDangListAdmin" parameterType = "DangListAdminRestRequestDto" resultType = "int">
  		select count(dang_no) from dang
  		<where>
			<if test = "dangArea != null">
				and dang_area = #{dangArea}
			</if>
			<if test = "dangName != null">
				and instr(dang_name, #{dangName}) > 0
			</if>
		</where>
  	</select>
  	
  	<!-- 관리자 페이지 댕모임 목록 상세 조회 -->
  	<select id = "searchDangDetailAdmin" parameterType = "map" resultMap = "dangDetailInfoDto">
  		select d.dang_no, d.dang_name, d.dang_info, d.dang_headmax, d.dang_head, d.dang_area, d.dang_createtime, d.dang_like, d.dang_private, di.attachment_no 
  		from dang d 
		left outer join dang_img di 
		on d.dang_no = di.dang_no 
		where d.dang_no = #{dangNo} and d.user_no = #{userNo}
  	</select>
  	<resultMap id = "dangDetailInfoDto" type = "DangDetailAdminInfoDto">
 		<association property = "dangDetailAdminDto">
 			<result column = "dang_no" property = "dangNo"/>
 			<result column = "dang_name" property = "dangName"/>
 			<result column = "dang_info" property = "dangInfo"/>
 			<result column = "dang_headmax" property = "dangHeadmax"/>
 			<result column = "dang_head" property = "dangHead"/>
 			<result column = "dang_area" property = "dangArea"/>
 			<result column = "dang_createtime" property = "dangCreatetime" javaType="java.sql.Date"/>
 			<result column = "dang_like" property = "dangLike"/>
 			<result column = "dang_private" property = "dangPrivate"/>
 			<result column = "attachment_no" property = "attachmentNo"/>
 		</association>
 		<collection column = "dang_no" property = "dangHashtag" javaType = "java.util.List" ofType = "DangHashtagVO" select = "selectHashtagList">
 			<result column = "hashtag_no" property = "hashtagNo"></result>
 			<result column = "hashtag_content" property = "hashtagContent"></result>
 		</collection>
 	</resultMap>
 	
  	<!-- 관리자 페이지 댕모임 회원 상세 조회 -->
  	<select id = "searchDangCreatorDetailAdmin" parameterType = "map" resultType = "DangDetailCreatorAdminDto">
  		select dudm.*, ui.attachment_no from (
			select dm.member_no, dm.member_nick, dm.member_grade, dm.member_score, du.user_no, du.user_id, du.user_email, du.user_tel, du.user_gender, du.user_joindate, du.user_logindate from dang_user du 
			inner join dang_member dm 
			on du.user_no = dm.user_no 
			where dm.dang_no = #{dangNo} and dm.user_no = #{userNo}
		) dudm left outer join user_img ui on dudm.user_no = ui.user_no
  	</select>
  	
  	<!-- 댕모임 해체 -->
  	<delete id = "closeDang" parameterType = "int">
  		delete dang where dang_no = #{dangNo}
  	</delete>
  	
  	<!-- 한 달동안 개설한 댕모임 수 반환 -->
  	<select id = "countDangCreate" parameterType = "int" resultType = "int">
  		select count(dang_no) from dang where to_char(dang_createtime, 'MM') = to_char(sysdate, 'MM') and user_no = #{userNo}
  	</select>
  	
</mapper>