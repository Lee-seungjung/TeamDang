<?xml version="1.0" encoding="UTF-8"?>

<!-- DOCTYPE 설정을 통해 자동완성 + 문법검사 수행 -->
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 
   mapper 내부에 SQL 구문을 배치
   - namespace : 외부에서 부르기 위한 별칭(테이블명으로 작성)
-->
<mapper namespace="schedule">

      <!-- 시퀀스 발행 -->
        <select id="sequence" resultType="int">
           select dang_schedule_seq.nextval from dual
        </select>
        
        <!-- 스케줄 목록 출력(우측상단) -->
        <select id="simpleList" parameterType="int" resultType="SimpleScheduleVO">
				select * from (
				     select TMP.*, rownum rn from (
				         select * from dang_scheduleList where time > TO_CHAR(SYSDATE, 'yyyymmdd' )           
				        )TMP
				 ) where rn between 1 and 5
        </select>
        
      <!-- 일정 목록 검색하여 달력에 출력-->
        <select id="list" parameterType="ScheduleVO" resultType="ScheduleVO">
            select p.place_name, ddm.* from dang_place p
            inner join (
            select D.schedule_no, D.place_no, D.schedule_title, D.schedule_content, D.schedule_headmax, D.schedule_head, D.schedule_start, D.schedule_hour, DM.member_nick, DM.dang_no
            from  
            dang_schedule D INNER join dang_member dm
                      on d.member_no = dm.member_no) ddm
            on ddm.place_no = p.place_no where ddm.dang_no=#{dangNo}
        </select> 
        
              <!--스케줄 번호로 일정 목록 검색하여 날짜별 달력 하단에 모달 출력-->
        <select id="scheduleOne" parameterType="Map" resultType="ScheduleOneVO">
           select p.place_name, ddm.* from dang_place p
            inner join (
            select D.schedule_no,  D.place_no, D.schedule_title, D.schedule_start, D.schedule_hour, DM.dang_no
            from  
            dang_schedule D INNER join dang_member dm
                      on d.member_no = dm.member_no) ddm
            on ddm.place_no = p.place_no where ddm.schedule_no =#{scheduleNo} and ddm.dang_no=#{dangNo}
        </select> 
        
              <!-- 일정에세 상세 클릭시 출력-->
        <select id="detail" parameterType="Map" resultType="ScheduleVO">
                        select p.place_name, ddm.* from dang_place p
            inner join (
            select D.schedule_no, D.place_no, D.schedule_title, D.schedule_content, D.schedule_headmax, D.schedule_head, D.schedule_start, D.schedule_hour, DM.member_nick, DM.dang_no, DM.member_no
            from  
            dang_schedule D INNER join dang_member dm
                      on d.member_no = dm.member_no) ddm
            on ddm.place_no = p.place_no where ddm.schedule_no = #{scheduleNo} and ddm.dang_no=#{dangNo}
        </select> 
        
                      <!-- 상세 일정에서 참여인원수 출력-->
        <select id="countJoin" parameterType="int" resultType="int">
			select count(*) from dang_join where schedule_no=#{scheduleNo}
        </select> 
        
                       <!-- 상세 일정에서 참여 회원 프로필 출력-->
        <select id="joinMemberList" parameterType="int" resultType="JoinMemberVO">
			select * from schedule_join_member where schedule_no=#{scheduleNo} 
        </select> 
        
                      <!-- 상세 일정에서 참여 회원 확인-->
        <select id="checkMemberList" parameterType="Map" resultType="JoinMemberVO">
			select * from schedule_join_member where schedule_no=#{scheduleNo} and member_no=#{memberNo}
        </select> 
                   
						<!--댕모임 회원이 일정페이지에서 일정 등록-->
        <insert id="scheduleInsert" parameterType="DangScheduleDto">
           insert into dang_schedule(schedule_no, member_no, place_no, schedule_title, schedule_content, schedule_headmax, schedule_start, schedule_hour, schedule_money)
			values(#{scheduleNo}, #{memberNo}, #{placeNo}, #{scheduleTitle}, #{scheduleContent}, #{scheduleHeadmax}, #{scheduleStart}, #{scheduleHour}, #{scheduleMoney})
        </insert>
        
        				<!--댕모임 회원이 일정페이지에서 일정 등록관련 시퀀스 발행-->
          <select id="scheduleSequence" resultType="int">
			select dang_schedule_seq.nextval from dual       
        </select>		
        
         				<!--댕모임 회원이 일정페이지에서 일정 등록관련 시퀀스 발행-->       
        <insert id="memberJoin" parameterType="DangJoinDto">
      		 insert into dang_join values(#{scheduleNo}, #{memberNo})
        </insert>		
        
                 		<!--댕모임 회원이 참여일정 취소-->       
        <delete id="memberJoinCancel" parameterType="Map">
       		delete dang_join where member_no=#{memberNo} and schedule_no=#{scheduleNo}
        </delete>	
        
       					 <!-- 일정 수정 -->
      <update id="scheduleEdit" parameterType="ScheduleEditVO" >
         update dang_schedule set schedule_title=#{scheduleTitle}, schedule_content=#{scheduleContent}, place_no=#{placeNo}, 
         schedule_headmax=#{scheduleHeadmax}, schedule_start=#{scheduleStart}, schedule_hour=#{scheduleHour}, schedule_money=#{scheduleMoney}
         where  schedule_no=#{scheduleNo} and dang_no= #{dangNo}
      </update> 
      
        					 <!-- (수정위한)일정 정보 조회 -->
      	<select id = "selectScheduleInfo" parameterType = "Map" resultType = "ScheduleEditVO">
			                                  select p.place_name, ddm.* from dang_place p
            inner join (
            select D.schedule_no, D.place_no, D.schedule_title, D.schedule_content, D.schedule_headmax, D.schedule_head, D.schedule_start, D.schedule_hour,  DM.dang_no
            from  
            dang_schedule D INNER join dang_member dm
                      on d.member_no = dm.member_no) ddm
            on ddm.place_no = p.place_no where schedule_no = #{scheduleNo} and dang_no= #{dangNo}
  	</select>    					      	
      
             			<!-- 일정 삭제 -->
      <delete id="scheduleDelete" parameterType="Map">
		delete dang_schedule where member_no=#{memberNo} and schedule_no=#{scheduleNo}	
      </delete> 
            
</mapper>