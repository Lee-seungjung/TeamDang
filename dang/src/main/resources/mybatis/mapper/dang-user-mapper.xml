<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="dangUser">

	<!-- 회원 번호 -->
	<select id = "userNo" resultType = "int">
		select dang_user_seq.nextval from dual
	</select>
	
	<!-- 회원 가입 -->
	<insert id = "join" parameterType = "DangUserDto">
		insert into dang_user(user_no, user_id, user_pw, user_email, user_nick, user_tel, user_gender) 
			values(#{userNo}, #{userId}, #{userPw}, #{userEmail}, #{userNick}, #{userTel}, #{userGender})
	</insert>
	
	<!-- 입력한 아이디로 회원정보 조회 -->
	<select id = "loginInfo" parameterType = "String" resultType = "DangUserVO">
		select du.user_no, du.user_id, du.user_pw, du.user_nick, du.user_grade, ui.attachment_no 
			from dang_user du left outer join user_img ui 
			on du.user_no = ui.user_no 
			where du.user_id = #{userId}
	</select>
	
	<!-- 입력한 이메일로 회원정보 조회 -->
	<select id = "checkEmail" parameterType = "String" resultType = "String">
		select user_id from dang_user where user_email = #{userEmail}
	</select>
	
	<!-- 마지막 로그인 일자 업데이트 -->
	<update id = "updateLogindate" parameterType = "int">
		update dang_user set user_logindate = sysdate where user_no = #{userNo}
	</update>
	
	<!-- 회원번호로 프로필 파일번호 찾기 -->
	<select id="findAttachmentNo" parameterType = "int" resultType = "Integer">
		select attachment_no from user_img where user_no=#{userNo}
	</select>
	
	<!-- 프로필 이미지 등록 -->
	<insert id="imgInsert" parameterType="UserImgDto">
		insert into user_img(attachment_no, user_no) values(#{attachmentNo},#{userNo})
	</insert>
	
	<!-- 프로필 이미지 삭제 -->
	<delete id="imgDelete" parameterType="int">
		delete user_img where attachment_no=#{attachmentNo}
	</delete>
	
	<!-- 회원 번호로 회원 정보 조회 -->
	<select id = "selectMypageInfo" parameterType = "int" resultType = "DangUserMypageVO">
		select du.user_no, du.user_id, du.user_email, du.user_nick, du.user_tel, du.user_joindate, du.user_logindate, ui.attachment_no from dang_user du left outer join user_img ui on du.user_no = ui.user_no where du.user_no = #{userNo}
	</select>
	
	<!-- 회원 번호로 비밀번호 조회 -->
	<select id = "selectPassword" parameterType = "int" resultType = "String">
		select user_pw from dang_user where user_no = #{userNo}
	</select>
	
	<!-- 회원 정보 변경 -->
	<update id = "editUserInfo" parameterType = "map">
		update dang_user set user_nick = #{userNick}, user_email = #{userEmail}, user_tel = #{userTel} where user_no = #{userNo}
	</update>
	
	<!-- 회원 비밀번호 변경 -->
	<update id = "changeUserPw" parameterType = "map">
		update dang_user set user_pw = #{userPw} where user_no = #{userNo}
	</update>
	
	<!-- 회원 탈퇴 -->
	<delete id = "closeUser" parameterType = "int">
		delete dang_user where user_no = #{userNo}
	</delete>
	
	<!-- 이메일로 아이디 찾기 -->
	<select id = "selectId" parameterType = "String" resultType = "String">
		select user_id from dang_user where user_email = #{userEmail}
	</select>
	
	<!-- 아이디, 이메일로 비밀번호 찾기(재설정) -->
	<select id = "selectPw" parameterType = "map" resultType = "int">
		select user_no from dang_user where user_id = #{userId} and user_email = #{userEmail}
	</select>
	
		<!-- (관리자)회원목록 불러오기(심플) -->
	<select id = "userList"  resultType = "DangUserListDto">
		select user_no, user_id, user_nick, user_joindate from dang_user
	</select>
	
			<!-- (관리자)회원 상세 불러오기(디테일) -->
	<select id = "userDetail"  parameterType = "int" resultType = "DangUserDetailDto">
		select user_no, user_id, user_nick, user_email, user_tel, user_gender, user_joindate, user_logindate from dang_user
		 where user_no=#{userNo}
	</select>
	
</mapper>